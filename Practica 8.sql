ALTER TABLE EMPLEADO
ADD Activo bit

UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '241'
UPDATE EMPLEADO SET Activo = '0' WHERE ID_Empleado = '242'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '243'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '244'
UPDATE EMPLEADO SET Activo = '0' WHERE ID_Empleado = '245'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '246'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '247'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '248'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '249'
UPDATE EMPLEADO SET Activo = '0' WHERE ID_Empleado = '250'
UPDATE EMPLEADO SET Activo = '0' WHERE ID_Empleado = '251'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '252'
UPDATE EMPLEADO SET Activo = '0' WHERE ID_Empleado = '253'
UPDATE EMPLEADO SET Activo = '1' WHERE ID_Empleado = '254'

CREATE TABLE EXEMPLEADO (
	Salida date,
	Descripcion varchar(100),
	Nombre varchar(100)
);

CREATE TRIGGER TR_DESPIDO
ON EMPLEADO AFTER DELETE 
AS
INSERT INTO EXEMPLEADO VALUES (GETDATE(), 'LLEGADA TARDE', 'Juan')

DELETE FROM EMPLEADO
WHERE ID_Empleado = '247';

SELECT * FROM EXEMPLEADO

CREATE TRIGGER TR_REINGRESO
ON EXEMPLEADO AFTER DELETE
AS
INSERT INTO EMPLEADO VALUES (247, GETDATE(), 500, 1)

DELETE FROM EXEMPLEADO
WHERE Nombre = 'Juan';

SELECT * FROM EXEMPLEADO
SELECT * FROM EMPLEADO  

ALTER TRIGGER TR_ACTUALIZAR
ON EMPLEADO AFTER UPDATE
AS
DECLARE @ID_Empleado tinyint
SELECT @ID_Empleado = ID_Empleado FROM INSERTED 
DELETE FROM EMPLEADO WHERE ID_Empleado = @ID_Empleado

UPDATE EMPLEADO SET ID_Empleado = '240' WHERE ID_Empleado = '241'

USE [Practica 3]

CREATE TRIGGER TR_INSTEAD
ON ORDEN INSTEAD OF INSERT
AS
DELETE FROM MESA WHERE ID_Mesa = '73'

INSERT INTO ORDEN VALUES (200,5)

SELECT * FROM MESA
